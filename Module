<?php
/**
* 2007-2023 PrestaShop
*
* NOTICE OF LICENSE
*
* This source file is subject to the Academic Free License (AFL 3.0)
* that is bundled with this package in the file LICENSE.txt.
* It is also available through the world-wide-web at this URL:
* http://opensource.org/licenses/afl-3.0.php
* If you did not receive a copy of the license and are unable to
* obtain it through the world-wide-web, please send an email
* to license@prestashop.com so we can send you a copy immediately.
*
* DISCLAIMER
*
* Do not edit or add to this file if you wish to upgrade PrestaShop to newer
* versions in the future. If you wish to customize PrestaShop for your
* needs please refer to http://www.prestashop.com for more information.
*
*  @author    PrestaShop SA <contact@prestashop.com>
*  @copyright 2007-2023 PrestaShop SA
*  @license   http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
*  International Registered Trademark & Property of PrestaShop SA
*/

if (!defined('_PS_VERSION_')) {
    exit;
}

class Jah_module extends Module
{
    protected $config_form = false;

    public function __construct()
    {
        $this->name = 'jah_module';
        $this->tab = 'front_office_features';
        $this->version = '1.0.0';
        $this->author = 'Andry';
        $this->need_instance = 1;

        /**
         * Set $this->bootstrap to true if your module is compliant with bootstrap (PrestaShop 1.6)
         */
        $this->bootstrap = true;

        parent::__construct();

        $this->displayName = $this->l('Jah_module');
        $this->description = $this->l('This is a jah module');

        $this->confirmUninstall = $this->l('Are you sure to install this module');

        $this->ps_versions_compliancy = array('min' => '1.6', 'max' => _PS_VERSION_);
    }

    /**
     * Don't forget to create update methods if needed:
     * http://doc.prestashop.com/display/PS16/Enabling+the+Auto-Update
     */
    public function install()
    {
        Configuration::updateValue('JAH_MODULE_LIVE_MODE', false);

        include(dirname(__FILE__).'/sql/install.php');

        return parent::install() &&
            $this->registerHook('header') &&
            $this->registerHook('displayBackOfficeHeader') &&
            $this->registerHook('displayHome');
    }

    public function uninstall()
    {
        Configuration::deleteByName('JAH_MODULE_LIVE_MODE');

        include(dirname(__FILE__).'/sql/uninstall.php');

        return parent::uninstall();
    }

    

    public function getContent()
    {
        if (Tools::isSubmit('submitAddconfiguration')) {
            $this->postProcess();
        }

        $this->context->smarty->assign('module_dir', $this->_path);

        $form = $this->renderForm();

        $this->context->smarty->assign('form', $form);

        $data = $this->getAllData();
        $this->context->smarty->assign('data', $data);

        $output = $this->context->smarty->fetch($this->local_path.'views/templates/admin/configure.tpl');

        return $output;
    }

    // public function getContent()
    // {
    //     $output = '';

    //     if (Tools::isSubmit('submitAddconfiguration')) {
    //         $this->postProcess();
    //     }

    //     $this->context->smarty->assign('module_dir', $this->_path);

    //     $form = $this->renderForm();

    //     $this->context->smarty->assign('form', $form);

    //     $data = $this->getAllData();
    //     $this->context->smarty->assign('data', $data);

    //     if (isset($this->context->controller->errors) && count($this->context->controller->errors) > 0) {
    //         foreach ($this->context->controller->errors as $error) {
    //             $output .= $this->displayError($error);
    //         }
    //     }

    //     if (isset($this->context->controller->confirmations) && count($this->context->controller->confirmations) > 0) {
    //         foreach ($this->context->controller->confirmations as $confirmation) {
    //             $output .= $this->displayConfirmation($confirmation);
    //         }
    //     }

    //     $output .= $this->context->smarty->fetch($this->local_path . 'views/templates/admin/configure.tpl');

    //     return $output;
    // }

    protected function renderForm()
    {
        $fields_form = array(
            'form' => array(
                'legend' => array(
                    'title' => $this->l('Ajouter des données'),
                ),
                'input' => array(
                    array(
                        'type' => 'text',
                        'label' => $this->l('Colonne 1'),
                        'name' => 'colonne1',
                        'required' => true,
                    ),
                    array(
                        'type' => 'textarea',
                        'label' => $this->l('Colonne 2'),
                        'name' => 'colonne2',
                        'required' => true,
                    ),
                ),
                'submit' => array(
                    'title' => $this->l('Enregistrer'),
                ),
            ),
        );

        $helper = new HelperForm();
        $helper->module = $this;
        $helper->name_controller = $this->name;
        $helper->token = Tools::getAdminTokenLite('AdminModules');
        $helper->currentIndex = AdminController::$currentIndex;

        return $helper->generateForm(array($fields_form));
    }

    protected function postProcess()
    {
        $colonne1 = Tools::getValue('colonne1');
        $colonne2 = Tools::getValue('colonne2');

        if (!empty($colonne1) && !empty($colonne2)) {
            $data = array(
                'colonne1' => pSQL($colonne1),
                'colonne2' => pSQL($colonne2),
            );

            if (Db::getInstance()->insert('jah_module', $data)) {
                $this->context->controller->confirmations[] = $this->l('Données insérées avec succès.');
            } else {
                $this->context->controller->errors[] = $this->l('Une erreur s\'est produite lors de l\'insertion des données.');
            }

            // You can use Tools::redirect to redirect to a specific URL
            Tools::redirectAdmin(AdminController::$currentIndex.'&configure='.$this->name.'&token='.Tools::getAdminTokenLite('AdminModules'));
        }
    }


    public function getAllData()
    {
        $sql = 'SELECT * FROM `' . _DB_PREFIX_ . 'jah_module`';
        return Db::getInstance()->executeS($sql);
    }

    public function hookDisplayBackOfficeHeader()
    {
        if (Tools::getValue('configure') == $this->name) {
            $this->context->controller->addJS($this->_path.'views/js/back.js');
            $this->context->controller->addCSS($this->_path.'views/css/back.css');
        }
    }

    public function hookHeader()
    {
        $this->context->controller->addJS($this->_path.'/views/js/front.js');
        $this->context->controller->addCSS($this->_path.'/views/css/front.css');
    }

    // public function hookDisplayHome($params)
    // {
    //     // Code à exécuter lorsque le hook displayHome est déclenché
    //     return "salut tout le monde";
    //     // return $this->display(__FILE__, '/views/templates/front/index.tpl');
    // }

    public function hookDisplayHome($params)
    {
        // Chargez un modèle (template) pour afficher votre contenu
        // $this->context->smarty->assign(array(
        //     'my_variable' => "Salut tout le monde",
        // ));

        return $this->display(__FILE__, 'views/templates/front/index.tpl');
    }

}
